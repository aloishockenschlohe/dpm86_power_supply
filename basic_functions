#! /bin/bash

# Program: basic_functions
# Purpose: provide a set of basic functions

# History
# -------
#111209-AHo: 0.1 -- first basic stuff (log, slog, goodbye, abort, fatal)

#---- Variables

bf_ver="0.1"				# Version of this script

# Variables needed for log and slog

# version of the calling script (will be added to the logstring

	if [ -z "$ver" ]; then
		ver="undefined"
	fi

# default log-tag
	if [ -z "$ltag" ]; then
		ltag="sysadminscript"
	fi

# default log facility
	if [ -z "$lfacility" ]; then
		lfacility="auth"
	fi

LOGGER="/usr/bin/logger"		# Path to logger

# Executables beside LOGGER

TRIPWIRE=/usr/sbin/tripwire

#----- Functions provided to all scripts

# Purpose: Log a string to syslog, to a logfile (if variable $sfile is set) and to the screen
# Usage:   
#          log "string"
#          log "prio" "string"

function log () {

	if [ -n "$2" ]; then
		lprio="$lfacility"".""$1"
		lstring="$0 Version $ver [$$] - $2"
	else
		lprio="$lfacility"".info"
		lstring="$0 Version $ver [$$] - $1"
	fi

	$LOGGER -p "$lprio" -t "$ltag" "$lstring"

	if [ -n "$lfile" ]; then
		NOW=`date`
		echo "$NOW - $0 Version $ver - $lstring" >> "$lfile"
	fi
	
	echo "$lstring"
}

# Purpose: Log a string to syslog and to a logfile (if variable $sfile is set)
# Usage:   
#          slog "string"
#          slog "prio" "string"

function slog () {

	if [ -n "$2" ]; then
		lprio="$lfacility"".""$1"
		lstring="$0 Version $ver [$$] - $2"
	else
		lprio="$lfacility"".info"
		lstring="$0 Version $ver [$$] - $1"
	fi

	$LOGGER -p "$lprio" -t "$ltag" "$lstring"

	if [ -n "$lfile" ]; then
		NOW=`date`
		echo "$NOW - $lstring" >> "$lfile"
	fi
}

# Purpose: Log an error string and exit.
# Usage:   
#          fatal "string"
#          fatal "error-code" "string"

function fatal () {

	if [ -n "$2" ]; then
		ecode="$1"
		lstring="$2"
	else
		ecode="1"
		lstring="$1"
	fi

	echo
	echo "!!!"
	echo "!!! A fatal error occured - script aborted."
	echo "!!! Please check carefully, what went wrong!"
	echo "!!!"
	echo
	log "error" "Fatal error: $lstring"
	log "error" "Exit."
	echo
	exit "$ecode"
}

# Purpose: Log an error string and exit.
# Usage:   
#          abort "string"
#          abort "error-code" "string"

function abort () {

	if [ -n "$2" ]; then
		ecode="$1"
		lstring="$2"
	else
		ecode="1"
		lstring="$1"
	fi

	echo
	echo "!!!"
	echo "!!! Script aborted."
	echo "!!!"
	echo
	log "notice" "Script aborted: $lstring"
	log "notice" "Exit."
	echo
	exit "$ecode"
}

# Purpose: Log an string and exit.
# Usage:   
#          goodbye "string"

function goodbye () {

	echo
	log "$1"
	log "Exit."
	echo
	exit 0
}

function sig_term {
	abort "Signal TERM received."
}

function sig_int {
	abort "Signal INT (Ctrl-C) received."
}

function sig_hup {
	abort "Signal HUP received."
}

#---- Code starts here

	slog "debug" "Script has been started by user $USER" 
	slog "debug" "basic funtions $bf_ver - init start"
	slog "debug" " * Installing signal handlers"
	trap sig_int  INT
	trap sig_term TERM
	trap sig_hup  HUP
	slog "debug" "basic funtions $bf_ver - init ended"

# this is the last line :-)
